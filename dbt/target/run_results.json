{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.3", "generated_at": "2025-06-24T05:20:00.844798Z", "invocation_id": "ad2fdeb0-ccf2-432f-acba-ba8b58d3fcf7", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-24T05:19:59.845306Z", "completed_at": "2025-06-24T05:19:59.863621Z"}, {"name": "execute", "started_at": "2025-06-24T05:19:59.864402Z", "completed_at": "2025-06-24T05:20:00.230508Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3889343738555908, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.duckdb.breweries_bronze", "compiled": true, "compiled_code": "\n\nSELECT * \nFROM read_parquet('s3://raw/*.parquet')", "relation_name": "\"dbt\".\"main_bronze\".\"breweries_bronze\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-24T05:20:00.239088Z", "completed_at": "2025-06-24T05:20:00.250183Z"}, {"name": "execute", "started_at": "2025-06-24T05:20:00.251982Z", "completed_at": "2025-06-24T05:20:00.564875Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.32840991020202637, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.duckdb.breweries_silver", "compiled": true, "compiled_code": "-- models/silver/breweries_silver.sql\n\n\n\nWITH source AS (\n    SELECT *\n    FROM \"dbt\".\"main_bronze\".\"breweries_bronze\"\n),\n\ncleaned AS (\n    SELECT\n        id,\n        lower(trim(CAST(name AS VARCHAR)))         AS name,\n        lower(trim(CAST(brewery_type AS VARCHAR))) AS brewery_type,\n        trim(CAST(address_1 AS VARCHAR))           AS address_1,\n        trim(CAST(address_2 AS VARCHAR))           AS address_2,\n        trim(CAST(address_3 AS VARCHAR))           AS address_3,\n        trim(CAST(street AS VARCHAR))              AS street,\n        upper(left(trim(CAST(city AS VARCHAR)), 1))\n          || lower(substr(trim(CAST(city AS VARCHAR)), 2)) AS city,\n        upper(trim(CAST(state AS VARCHAR)))        AS state,\n        upper(trim(CAST(state_province AS VARCHAR))) AS state_province,\n        trim(CAST(postal_code AS VARCHAR))         AS postal_code,\n        trim(CAST(country AS VARCHAR))             AS country,\n        trim(CAST(phone AS VARCHAR))               AS phone,\n        trim(CAST(website_url AS VARCHAR))         AS website_url,\n        CAST(longitude AS DOUBLE)                  AS longitude,\n        CAST(latitude AS DOUBLE)                   AS latitude\n    FROM source\n    WHERE id IS NOT NULL\n)\n\nSELECT DISTINCT * FROM cleaned", "relation_name": "\"dbt\".\"main_silver\".\"breweries_silver\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-24T05:20:00.571211Z", "completed_at": "2025-06-24T05:20:00.583566Z"}, {"name": "execute", "started_at": "2025-06-24T05:20:00.584326Z", "completed_at": "2025-06-24T05:20:00.829075Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.25981974601745605, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.duckdb.breweries_gold", "compiled": true, "compiled_code": "\n\nWITH agg AS (\n  SELECT\n    brewery_type,\n    state,\n    city,\n    COUNT(*) AS brewery_count\n  FROM \"dbt\".\"main_silver\".\"breweries_silver\"\n  GROUP BY brewery_type, state, city\n)\n\nSELECT\n  brewery_type,\n  state,\n  city,\n  brewery_count,\n  -- total por estado (soma de brewery_count dentro de cada state)\n  SUM(brewery_count) OVER (PARTITION BY state)              AS total_per_state,\n  -- percentual dentro do estado\n  ROUND(\n    100.0 * brewery_count \n    / NULLIF(SUM(brewery_count) OVER (PARTITION BY state), 0)\n  , 2)                                                      AS pct_of_state,\n  -- ranking dentro do estado\n  RANK() OVER (PARTITION BY state ORDER BY brewery_count DESC) AS rank_within_state\nFROM agg\nORDER BY state, rank_within_state", "relation_name": "\"dbt\".\"main_gold\".\"breweries_gold\""}], "elapsed_time": 20.364237308502197, "args": {"printer_width": 80, "source_freshness_run_project_hooks": false, "select": [], "use_colors_file": true, "log_path": "/opt/airflow/logs", "strict_mode": false, "exclude": [], "log_level_file": "debug", "project_dir": "/opt/dbt", "log_level": "info", "favor_state": false, "version_check": true, "require_resource_names_without_spaces": false, "cache_selected_only": false, "indirect_selection": "eager", "log_format_file": "debug", "macro_debugging": false, "write_json": true, "partial_parse": true, "use_colors": true, "show_resource_report": false, "log_file_max_bytes": 10485760, "profiles_dir": "/opt/dbt", "introspect": true, "quiet": false, "partial_parse_file_diff": true, "print": true, "populate_cache": true, "send_anonymous_usage_stats": true, "invocation_command": "dbt run --project-dir /opt/dbt --profiles-dir /opt/dbt", "require_explicit_package_overrides_for_builtin_materializations": true, "log_format": "default", "empty": false, "vars": {}, "which": "run", "defer": false, "enable_legacy_logger": false, "warn_error_options": {"include": [], "exclude": []}, "static_parser": true}}